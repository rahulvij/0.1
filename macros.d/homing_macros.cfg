[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-10 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G28 Z
    G91
    G1 Z-10
  {% endif %}

# [gcode_macro _Z_ENDSTOP_PHASE_CALIBRATE]
# gcode:
#     {% if "endstop_phase" not in printer.configfile.config %}
#         M118 You need to add [endstop_phase] to your printer.cfg before you can use this macro.
#     {% else %}
#         {% if "xyz" not in printer.toolhead.homed_axes %}
#             G28  # home all axes
#         {% endif %}
  
#         # Set this to something between min pos, and endstop pos
#         # so that bed doesnt move around that much
#         {% set min_pos_offset = params.MIN_POS_OFFSET|default(60)|int %} #
    
#         {% set runs = params.RUNS|default(10)|int %}
#         {% set position_min = printer.configfile.config["stepper_z"]["position_min"]|int + min_pos_offset %}
#         {% set position_max = printer.configfile.config["stepper_z"]["position_endstop"]|int - 1 %}
    
#         M118 Doing {runs} calibration runs. Use COUNT=X to change that.
#         M118 Bed will move between Z{position_min} and Z{position_max}. Use MIN_POS_OFFSET to offset min position.
#         {% for n in range(runs) %}
#           {% set rand_pos = range(position_min, position_max) | random %}
#           G90             # Use absolute positioning
#           G1 Z{rand_pos}  # Move bed to a random position
#           M118 Calibrating from Z{rand_pos}
#           G28 Z0          # Home again
#           ENDSTOP_PHASE_CALIBRATE STEPPER=stepper_z
#         {% endfor %}
#     {% endif %}